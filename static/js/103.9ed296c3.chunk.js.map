{"version":3,"file":"static/js/103.9ed296c3.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.js","components/LoadMoreBtn/Button.styled.js","components/LoadMoreBtn/Button.js","components/SearchBar/Searchbar.styled.js","components/SearchBar/Searchbar.js","pages/MoviesPage.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\n  /* grid-template-rows: */\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const MovieImage = styled.img`\n  width: 100%;\n  height: 260px;\n  object-fit: cover;\n`;\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  text-align: center;\n  color: ${p => p.theme.colors.mainTextColor};\n`;\n","import { useLocation } from 'react-router-dom';\nimport { Link, MovieImage, MovieList } from './MoviesList.styled';\n\nexport const Movies = ({ moviesList }) => {\n  const location = useLocation();\n\n  return (\n    <MovieList>\n      {moviesList.map(({ id, title, poster_path }, key = { id }) => {\n        return (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <MovieImage\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                    : 'https://astatic.ccmbg.com/ccmcms_linternaute/dist/public/public-assets/img/default/cine-defaut-1.jpg'\n                }\n                alt={title}\n              />\n              <p>{title}</p>\n            </Link>\n          </li>\n        );\n      })}\n    </MovieList>\n  );\n};\n","import styled from 'styled-components';\n\nexport const BtnStyled = styled.button`\n  display: block;\n  margin: 16px auto;\n  padding: 8px 16px;\n  border: 0;\n  text-align: center;\n  color: ${p => p.theme.colors.navLinkAccentColor};\n  font-weight: 700;\n  min-width: 180px;\n  border-radius: 45px;\n  box-shadow: 0px 8px 15px rgba(42, 52, 114, 0.7);\n  transition: all 0.3s ease 0s;\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: 0px 15px 20px rgba(42, 52, 114, 0.7);\n    transform: translateY(-7px);\n  }\n`;\n","import { BtnStyled } from './Button.styled';\n\nexport const Button = ({ onClick }) => (\n  <BtnStyled onClick={onClick}>Load more</BtnStyled>\n);\n","import { Form as FormikForm, Field as FormicField } from 'formik';\nimport styled from 'styled-components';\n\nexport const SearchSection = styled.div`\n  top: 0;\n  left: 0;\n  position: sticky;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 40px;\n  padding-right: ${p => p.theme.spasing(3)};\n  padding-left: ${p => p.theme.spasing(3)};\n  color: #fff;\n  margin-bottom: ${p => p.theme.spasing(3)};\n`;\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const Field = styled(FormicField)`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 14px;\n  border: none;\n  outline: none;\n  padding-left: ${p => p.theme.spasing(1)};\n  padding-right: ${p => p.theme.spasing(1)};\n\n  &:placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const SearchBtn = styled.button`\n  display: inline-block;\n  width: 32px;\n  height: 32px;\n  border: 0;\n\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  background-color: #fff;\n\n  &:hover {\n    opacity: 1;\n    color: #3984e9;\n  }\n`;\n","import { Formik } from 'formik';\nimport { Field, Form, SearchBtn, SearchSection } from './Searchbar.styled';\nimport { AiOutlineSearch } from 'react-icons/ai';\n\nexport const Search = ({ onSubmitSearch }) => (\n  <SearchSection>\n    <Formik\n      initialValues={{\n        query: '',\n      }}\n      onSubmit={(values, actions) => {\n        onSubmitSearch(values.query);\n        actions.resetForm();\n      }}\n    >\n      <Form>\n        <Field name=\"query\" placeholder=\"Search movies\" />\n        <SearchBtn type=\"submit\">\n          <AiOutlineSearch />\n        </SearchBtn>\n      </Form>\n    </Formik>\n  </SearchSection>\n);\n","import { FetchMovies } from 'api';\nimport { Button } from 'components/LoadMoreBtn/Button';\nimport { Loader } from 'components/Loader/Loader';\nimport { Movies } from 'components/MoviesList/MoviesList';\nimport { Search } from 'components/SearchBar/Searchbar';\nimport { useEffect, useState } from 'react';\nimport toast from 'react-hot-toast';\nimport { useSearchParams } from 'react-router-dom';\n\nexport default function MoviesPage() {\n  const [totalMovies, setTotalMovies] = useState(0);\n  const [totalPages, setTotalPages] = useState(0);\n  const [moviesList, setMovies] = useState([]);\n  const [key, setKey] = useState(Date.now());\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [params, setParams] = useSearchParams();\n  const query = params.get('query') ?? '';\n  const page = params.get('page') ?? 1;\n\n  useEffect(() => {\n    if (!query.trim()) {\n      return;\n    }\n    async function getMovies() {\n      try {\n        setIsLoading(true);\n        const fetchedMovies = await FetchMovies(query, page);\n\n        if (fetchedMovies.total_results === 0) {\n          toast.error(`There is no movies on query '${query}'`);\n          return;\n        }\n\n        Number(page) === 1\n          ? setMovies([...fetchedMovies.results])\n          : setMovies(prevMovies => [...prevMovies, ...fetchedMovies.results]);\n        setTotalMovies(fetchedMovies.total_results);\n        setTotalPages(fetchedMovies.total_pages);\n      } catch (error) {\n        toast.error(`ERROR loading movies ${error}`);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    getMovies();\n  }, [query, key, page]);\n\n  const handleSubmit = newQuery => {\n    if (!newQuery.trim()) {\n      return toast.error('Search query can not be empty');\n    }\n    setParams({\n      query: newQuery,\n      page: 1,\n    });\n    setMovies([]);\n    setTotalMovies(0);\n    setTotalPages(0);\n\n    setKey(Date.now());\n  };\n\n  const handleLoadMore = () => {\n    params.set('page', Number(page) + 1);\n    setParams(params);\n  };\n\n  return (\n    <div>\n      <Search onSubmitSearch={handleSubmit} />\n      {isLoading && <Loader />}\n      {moviesList.length > 0 && <Movies moviesList={moviesList} />}\n      {totalMovies - moviesList.length > 0 && totalPages > page && (\n        <Button onClick={handleLoadMore} />\n      )}\n    </div>\n  );\n}\n"],"names":["MovieList","styled","_templateObject","_taggedTemplateLiteral","MovieImage","_templateObject2","Link","NavLink","_templateObject3","p","theme","colors","mainTextColor","Movies","_ref","moviesList","location","useLocation","_jsx","children","map","_ref2","id","title","poster_path","_jsxs","to","concat","state","from","src","alt","BtnStyled","navLinkAccentColor","Button","onClick","SearchSection","spasing","Form","FormikForm","Field","FormicField","SearchBtn","_templateObject4","Search","onSubmitSearch","Formik","initialValues","query","onSubmit","values","actions","resetForm","name","placeholder","type","AiOutlineSearch","MoviesPage","_params$get","_params$get2","_useState","useState","_useState2","_slicedToArray","totalMovies","setTotalMovies","_useState3","_useState4","totalPages","setTotalPages","_useState5","_useState6","setMovies","_useState7","Date","now","_useState8","key","setKey","_useState9","_useState10","isLoading","setIsLoading","_useSearchParams","useSearchParams","_useSearchParams2","params","setParams","get","page","useEffect","_getMovies","_asyncToGenerator","_regeneratorRuntime","_callee","fetchedMovies","_context","prev","next","FetchMovies","sent","total_results","toast","abrupt","Number","_toConsumableArray","results","prevMovies","total_pages","t0","finish","stop","apply","arguments","trim","getMovies","newQuery","Loader","length","set"],"sourceRoot":""}